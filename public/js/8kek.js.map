{"version":3,"sources":["pwstrength.js","app.js"],"names":[],"mappingszfile":"8kek.js","sourcesContent":["/*!\n * jQuery Password Strength plugin for Twitter Bootstrap\n * Version: 2.0.1\n *\n * Copyright (c) 2008-2013 Tane Piper\n * Copyright (c) 2013 Alejandro Blanco\n * Dual licensed under the MIT and GPL licenses.\n */\n(function (jQuery) {\n// Source: src/i18n.js\n\n    var i18n = {};\n\n    (function (i18n, i18next) {\n        'use strict';\n\n        i18n.fallback = {\n            \"wordLength\": \"Your password is too short\",\n            \"wordNotEmail\": \"Do not use your email as your password\",\n            \"wordSimilarToUsername\": \"Your password cannot contain your username\",\n            \"wordTwoCharacterClasses\": \"Use different character classes\",\n            \"wordRepetitions\": \"Too many repetitions\",\n            \"wordSequences\": \"Your password contains sequences\",\n            \"errorList\": \"Errors:\",\n            \"veryWeak\": \"Very Weak\",\n            \"weak\": \"Weak\",\n            \"normal\": \"Normal\",\n            \"medium\": \"Medium\",\n            \"strong\": \"Strong\",\n            \"veryStrong\": \"Very Strong\"\n        };\n\n        i18n.t = function (key) {\n            var result = '';\n\n            // Try to use i18next.com\n            if (i18next) {\n                result = i18next.t(key);\n            } else {\n                // Fallback to english\n                result = i18n.fallback[key];\n            }\n\n            return result === key ? '' : result;\n        };\n    }(i18n, window.i18next));\n\n// Source: src/rules.js\n\n\n    var rulesEngine = {};\n\n    try {\n        if (!jQuery && module && module.exports) {\n            var jQuery = require(\"jquery\"),\n                jsdom = require(\"jsdom\").jsdom;\n            jQuery = jQuery(jsdom().parentWindow);\n        }\n    } catch (ignore) {\n    }\n\n    (function ($, rulesEngine) {\n        \"use strict\";\n        var validation = {};\n\n        rulesEngine.forbiddenSequences = [\n            \"0123456789\", \"abcdefghijklmnopqrstuvwxyz\", \"qwertyuiop\", \"asdfghjkl\",\n            \"zxcvbnm\", \"!@#$%^&*()_+\"\n        ];\n\n        validation.wordNotEmail = function (options, word, score) {\n            if (word.match(/^([\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$/i)) {\n                return score;\n            }\n            return 0;\n        };\n\n        validation.wordLength = function (options, word, score) {\n            var wordlen = word.length,\n                lenScore = Math.pow(wordlen, options.rules.raisePower);\n            if (wordlen < options.common.minChar) {\n                lenScore = (lenScore + score);\n            }\n            return lenScore;\n        };\n\n        validation.wordSimilarToUsername = function (options, word, score) {\n            var username = $(options.common.usernameField).val();\n            if (username && word.toLowerCase().match(username.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\=\\?\\:\\.\\\\\\^\\$\\|\\!\\,]/g, \"\\\\$&\").toLowerCase())) {\n                return score;\n            }\n            return 0;\n        };\n\n        validation.wordTwoCharacterClasses = function (options, word, score) {\n            if (word.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) ||\n                (word.match(/([a-zA-Z])/) && word.match(/([0-9])/)) ||\n                (word.match(/(.[!,@,#,$,%,\\^,&,*,?,_,~])/) && word.match(/[a-zA-Z0-9_]/))) {\n                return score;\n            }\n            return 0;\n        };\n\n        validation.wordRepetitions = function (options, word, score) {\n            if (word.match(/(.)\\1\\1/)) {\n                return score;\n            }\n            return 0;\n        };\n\n        validation.wordSequences = function (options, word, score) {\n            var found = false,\n                j;\n            if (word.length > 2) {\n                $.each(rulesEngine.forbiddenSequences, function (idx, seq) {\n                    if (found) {\n                        return;\n                    }\n                    var sequences = [seq, seq.split('').reverse().join('')];\n                    $.each(sequences, function (idx, sequence) {\n                        for (j = 0; j < (word.length - 2); j += 1) { // iterate the word trough a sliding window of size 3:\n                            if (sequence.indexOf(word.toLowerCase().substring(j, j + 3)) > -1) {\n                                found = true;\n                            }\n                        }\n                    });\n                });\n                if (found) {\n                    return score;\n                }\n            }\n            return 0;\n        };\n\n        validation.wordLowercase = function (options, word, score) {\n            return word.match(/[a-z]/) && score;\n        };\n\n        validation.wordUppercase = function (options, word, score) {\n            return word.match(/[A-Z]/) && score;\n        };\n\n        validation.wordOneNumber = function (options, word, score) {\n            return word.match(/\\d+/) && score;\n        };\n\n        validation.wordThreeNumbers = function (options, word, score) {\n            return word.match(/(.*[0-9].*[0-9].*[0-9])/) && score;\n        };\n\n        validation.wordOneSpecialChar = function (options, word, score) {\n            return word.match(/[!,@,#,$,%,\\^,&,*,?,_,~]/) && score;\n        };\n\n        validation.wordTwoSpecialChar = function (options, word, score) {\n            return word.match(/(.*[!,@,#,$,%,\\^,&,*,?,_,~].*[!,@,#,$,%,\\^,&,*,?,_,~])/) && score;\n        };\n\n        validation.wordUpperLowerCombo = function (options, word, score) {\n            return word.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && score;\n        };\n\n        validation.wordLetterNumberCombo = function (options, word, score) {\n            return word.match(/([a-zA-Z])/) && word.match(/([0-9])/) && score;\n        };\n\n        validation.wordLetterNumberCharCombo = function (options, word, score) {\n            return word.match(/([a-zA-Z0-9].*[!,@,#,$,%,\\^,&,*,?,_,~])|([!,@,#,$,%,\\^,&,*,?,_,~].*[a-zA-Z0-9])/) && score;\n        };\n\n        rulesEngine.validation = validation;\n\n        rulesEngine.executeRules = function (options, word) {\n            var totalScore = 0;\n\n            $.each(options.rules.activated, function (rule, active) {\n                if (active) {\n                    var score = options.rules.scores[rule],\n                        funct = rulesEngine.validation[rule],\n                        result,\n                        errorMessage;\n\n                    if (!$.isFunction(funct)) {\n                        funct = options.rules.extra[rule];\n                    }\n\n                    if ($.isFunction(funct)) {\n                        result = funct(options, word, score);\n                        if (result) {\n                            totalScore += result;\n                        }\n                        if (result < 0 || (!$.isNumeric(result) && !result)) {\n                            errorMessage = options.ui.spanError(options, rule);\n                            if (errorMessage.length > 0) {\n                                options.instances.errors.push(errorMessage);\n                            }\n                        }\n                    }\n                }\n            });\n\n            return totalScore;\n        };\n    }(jQuery, rulesEngine));\n\n    try {\n        if (module && module.exports) {\n            module.exports = rulesEngine;\n        }\n    } catch (ignore) {\n    }\n\n// Source: src/options.js\n\n\n    var defaultOptions = {};\n\n    defaultOptions.common = {};\n    defaultOptions.common.minChar = 6;\n    defaultOptions.common.usernameField = \"#username\";\n    defaultOptions.common.userInputs = [\n        // Selectors for input fields with user input\n    ];\n    defaultOptions.common.onLoad = undefined;\n    defaultOptions.common.onKeyUp = undefined;\n    defaultOptions.common.zxcvbn = false;\n    defaultOptions.common.zxcvbnTerms = [\n        // List of disrecommended words\n    ];\n    defaultOptions.common.events = [\"keyup\", \"change\", \"paste\"];\n    defaultOptions.common.debug = false;\n\n    defaultOptions.rules = {};\n    defaultOptions.rules.extra = {};\n    defaultOptions.rules.scores = {\n        wordNotEmail: -100,\n        wordLength: -50,\n        wordSimilarToUsername: -100,\n        wordSequences: -20,\n        wordTwoCharacterClasses: 2,\n        wordRepetitions: -25,\n        wordLowercase: 1,\n        wordUppercase: 3,\n        wordOneNumber: 3,\n        wordThreeNumbers: 5,\n        wordOneSpecialChar: 3,\n        wordTwoSpecialChar: 5,\n        wordUpperLowerCombo: 2,\n        wordLetterNumberCombo: 2,\n        wordLetterNumberCharCombo: 2\n    };\n    defaultOptions.rules.activated = {\n        wordNotEmail: true,\n        wordLength: true,\n        wordSimilarToUsername: true,\n        wordSequences: true,\n        wordTwoCharacterClasses: false,\n        wordRepetitions: false,\n        wordLowercase: true,\n        wordUppercase: true,\n        wordOneNumber: true,\n        wordThreeNumbers: true,\n        wordOneSpecialChar: true,\n        wordTwoSpecialChar: true,\n        wordUpperLowerCombo: true,\n        wordLetterNumberCombo: true,\n        wordLetterNumberCharCombo: true\n    };\n    defaultOptions.rules.raisePower = 1.4;\n\n    defaultOptions.ui = {};\n    defaultOptions.ui.bootstrap2 = false;\n    defaultOptions.ui.bootstrap4 = false;\n    defaultOptions.ui.colorClasses = [\n        \"danger\", \"danger\", \"danger\", \"warning\", \"warning\", \"success\"\n    ];\n    defaultOptions.ui.showProgressBar = true;\n    defaultOptions.ui.progressBarEmptyPercentage = 1;\n    defaultOptions.ui.progressBarMinPercentage = 1;\n    defaultOptions.ui.progressBarExtraCssClasses = '';\n    defaultOptions.ui.showPopover = false;\n    defaultOptions.ui.popoverPlacement = \"bottom\";\n    defaultOptions.ui.showStatus = false;\n    defaultOptions.ui.spanError = function (options, key) {\n        \"use strict\";\n        var text = options.i18n.t(key);\n        if (!text) {\n            return '';\n        }\n        return '<span style=\"color: #d52929\">' + text + '</span>';\n    };\n    defaultOptions.ui.popoverError = function (options) {\n        \"use strict\";\n        var errors = options.instances.errors,\n            errorsTitle = options.i18n.t(\"errorList\"),\n            message = \"<div>\" + errorsTitle + \"<ul class='error-list' style='margin-bottom: 0;'>\";\n\n        jQuery.each(errors, function (idx, err) {\n            message += \"<li>\" + err + \"</li>\";\n        });\n        message += \"</ul></div>\";\n        return message;\n    };\n    defaultOptions.ui.showVerdicts = true;\n    defaultOptions.ui.showVerdictsInsideProgressBar = false;\n    defaultOptions.ui.useVerdictCssClass = false;\n    defaultOptions.ui.showErrors = false;\n    defaultOptions.ui.showScore = false;\n    defaultOptions.ui.container = undefined;\n    defaultOptions.ui.viewports = {\n        progress: undefined,\n        verdict: undefined,\n        errors: undefined,\n        score: undefined\n    };\n    defaultOptions.ui.scores = [0, 14, 26, 38, 50];\n\n    defaultOptions.i18n = {};\n    defaultOptions.i18n.t = i18n.t;\n\n// Source: src/ui.js\n\n\n    var ui = {};\n\n    (function ($, ui) {\n        \"use strict\";\n\n        var statusClasses = [\"error\", \"warning\", \"success\"],\n            verdictKeys = [\n                \"veryWeak\", \"weak\", \"normal\", \"medium\", \"strong\", \"veryStrong\"\n            ];\n\n        ui.getContainer = function (options, $el) {\n            var $container;\n\n            $container = $(options.ui.container);\n            if (!($container && $container.length === 1)) {\n                $container = $el.parent();\n            }\n            return $container;\n        };\n\n        ui.findElement = function ($container, viewport, cssSelector) {\n            if (viewport) {\n                return $container.find(viewport).find(cssSelector);\n            }\n            return $container.find(cssSelector);\n        };\n\n        ui.getUIElements = function (options, $el) {\n            var $container, selector, result;\n\n            if (options.instances.viewports) {\n                return options.instances.viewports;\n            }\n\n            $container = ui.getContainer(options, $el);\n\n            result = {};\n            if (options.ui.bootstrap4) {\n                selector = \"progress.progress\";\n            } else {\n                selector = \"div.progress\";\n            }\n            result.$progressbar = ui.findElement($container, options.ui.viewports.progress, selector);\n            if (options.ui.showVerdictsInsideProgressBar) {\n                result.$verdict = result.$progressbar.find(\"span.password-verdict\");\n            }\n\n            if (!options.ui.showPopover) {\n                if (!options.ui.showVerdictsInsideProgressBar) {\n                    result.$verdict = ui.findElement($container, options.ui.viewports.verdict, \"span.password-verdict\");\n                }\n                result.$errors = ui.findElement($container, options.ui.viewports.errors, \"ul.error-list\");\n            }\n            result.$score = ui.findElement($container, options.ui.viewports.score,\n                \"span.password-score\");\n\n            options.instances.viewports = result;\n            return result;\n        };\n\n        ui.initProgressBar = function (options, $el) {\n            var $container = ui.getContainer(options, $el),\n                progressbar = \"<div class='progress \";\n\n            if (options.ui.bootstrap2) {\n                // Boostrap 2\n                progressbar += options.ui.progressBarExtraCssClasses +\n                    \"'><div class='\";\n            } else if (!options.ui.bootstrap2 && !options.ui.bootstrap4) {\n                // Bootstrap 3\n                progressbar += \"'><div class='\" +\n                    options.ui.progressBarExtraCssClasses + \" progress-\";\n            }\n            progressbar += \"bar'>\";\n\n            if (options.ui.bootstrap4) {\n                // Boostrap 4\n                progressbar = \"<progress class='progress \" +\n                    options.ui.progressBarExtraCssClasses + \"' value='0' max='100'>\";\n            }\n\n            if (options.ui.showVerdictsInsideProgressBar) {\n                progressbar += \"<span class='password-verdict'></span>\";\n            }\n\n            if (options.ui.bootstrap4) {\n                progressbar += \"</progress>\";\n            } else {\n                progressbar += \"</div></div>\";\n            }\n\n            if (options.ui.viewports.progress) {\n                $container.find(options.ui.viewports.progress).append(progressbar);\n            } else {\n                $(progressbar).insertAfter($el);\n            }\n        };\n\n        ui.initHelper = function (options, $el, html, viewport) {\n            var $container = ui.getContainer(options, $el);\n            if (viewport) {\n                $container.find(viewport).append(html);\n            } else {\n                $(html).insertAfter($el);\n            }\n        };\n\n        ui.initVerdict = function (options, $el) {\n            ui.initHelper(options, $el, \"<span class='password-verdict'></span>\",\n                options.ui.viewports.verdict);\n        };\n\n        ui.initErrorList = function (options, $el) {\n            ui.initHelper(options, $el, \"<ul class='error-list'></ul>\",\n                options.ui.viewports.errors);\n        };\n\n        ui.initScore = function (options, $el) {\n            ui.initHelper(options, $el, \"<span class='password-score'></span>\",\n                options.ui.viewports.score);\n        };\n\n        ui.initPopover = function (options, $el) {\n            $el.popover(\"destroy\");\n            $el.popover({\n                html: true,\n                placement: options.ui.popoverPlacement,\n                trigger: \"manual\",\n                content: \" \"\n            });\n        };\n\n        ui.initUI = function (options, $el) {\n            if (options.ui.showPopover) {\n                ui.initPopover(options, $el);\n            } else {\n                if (options.ui.showErrors) {\n                    ui.initErrorList(options, $el);\n                }\n                if (options.ui.showVerdicts && !options.ui.showVerdictsInsideProgressBar) {\n                    ui.initVerdict(options, $el);\n                }\n            }\n            if (options.ui.showProgressBar) {\n                ui.initProgressBar(options, $el);\n            }\n            if (options.ui.showScore) {\n                ui.initScore(options, $el);\n            }\n        };\n\n        ui.updateProgressBar = function (options, $el, cssClass, percentage) {\n            var $progressbar = ui.getUIElements(options, $el).$progressbar,\n                $bar = $progressbar.find(\".progress-bar\"),\n                cssPrefix = \"progress-\";\n\n            if (options.ui.bootstrap2) {\n                $bar = $progressbar.find(\".bar\");\n                cssPrefix = \"\";\n            }\n\n            $.each(options.ui.colorClasses, function (idx, value) {\n                if (options.ui.bootstrap4) {\n                    $progressbar.removeClass(cssPrefix + value);\n                } else {\n                    $bar.removeClass(cssPrefix + \"bar-\" + value);\n                }\n            });\n            if (options.ui.bootstrap4) {\n                $progressbar.addClass(cssPrefix + options.ui.colorClasses[cssClass]);\n                $progressbar.val(percentage);\n            } else {\n                $bar.addClass(cssPrefix + \"bar-\" + options.ui.colorClasses[cssClass]);\n                $bar.css(\"width\", percentage + '%');\n            }\n        };\n\n        ui.updateVerdict = function (options, $el, cssClass, text) {\n            var $verdict = ui.getUIElements(options, $el).$verdict;\n            $verdict.removeClass(options.ui.colorClasses.join(' '));\n            if (cssClass > -1) {\n                $verdict.addClass(options.ui.colorClasses[cssClass]);\n            }\n            $verdict.html(text);\n        };\n\n        ui.updateErrors = function (options, $el, remove) {\n            var $errors = ui.getUIElements(options, $el).$errors,\n                html = \"\";\n\n            if (!remove) {\n                $.each(options.instances.errors, function (idx, err) {\n                    html += \"<li>\" + err + \"</li>\";\n                });\n            }\n            $errors.html(html);\n        };\n\n        ui.updateScore = function (options, $el, score, remove) {\n            var $score = ui.getUIElements(options, $el).$score,\n                html = \"\";\n\n            if (!remove) {\n                html = score.toFixed(2);\n            }\n            $score.html(html);\n        };\n\n        ui.updatePopover = function (options, $el, verdictText, remove) {\n            var popover = $el.data(\"bs.popover\"),\n                html = \"\",\n                hide = true;\n\n            if (options.ui.showVerdicts && !options.ui.showVerdictsInsideProgressBar &&\n                verdictText.length > 0) {\n                html = \"<h5><span class='password-verdict'>\" + verdictText +\n                    \"</span></h5>\";\n                hide = false;\n            }\n            if (options.ui.showErrors) {\n                if (options.instances.errors.length > 0) {\n                    hide = false;\n                }\n                html += options.ui.popoverError(options);\n            }\n\n            if (hide || remove) {\n                $el.popover(\"hide\");\n                return;\n            }\n\n            if (options.ui.bootstrap2) {\n                popover = $el.data(\"popover\");\n            }\n\n            if (popover.$arrow && popover.$arrow.parents(\"body\").length > 0) {\n                $el.find(\"+ .popover .popover-content\").html(html);\n            } else {\n                // It's hidden\n                popover.options.content = html;\n                $el.popover(\"show\");\n            }\n        };\n\n        ui.updateFieldStatus = function (options, $el, cssClass, remove) {\n            var targetClass = options.ui.bootstrap2 ? \".control-group\" : \".form-group\",\n                $container = $el.parents(targetClass).first();\n\n            $.each(statusClasses, function (idx, css) {\n                if (!options.ui.bootstrap2) {\n                    css = \"has-\" + css;\n                }\n                $container.removeClass(css);\n            });\n\n            if (remove) {\n                return;\n            }\n\n            cssClass = statusClasses[cssClass];\n            if (!options.ui.bootstrap2) {\n                cssClass = \"has-\" + cssClass;\n            }\n            $container.addClass(cssClass);\n        };\n\n        ui.percentage = function (options, score, maximun) {\n            var result = Math.floor(100 * score / maximun),\n                min = options.ui.progressBarMinPercentage;\n\n            result = result <= min ? min : result;\n            result = result > 100 ? 100 : result;\n            return result;\n        };\n\n        ui.getVerdictAndCssClass = function (options, score) {\n            var level, verdict;\n\n            if (score === undefined) {\n                return ['', 0];\n            }\n\n            if (score <= options.ui.scores[0]) {\n                level = 0;\n            } else if (score < options.ui.scores[1]) {\n                level = 1;\n            } else if (score < options.ui.scores[2]) {\n                level = 2;\n            } else if (score < options.ui.scores[3]) {\n                level = 3;\n            } else if (score < options.ui.scores[4]) {\n                level = 4;\n            } else {\n                level = 5;\n            }\n\n            verdict = verdictKeys[level];\n\n            return [options.i18n.t(verdict), level];\n        };\n\n        ui.updateUI = function (options, $el, score) {\n            var cssClass, barPercentage, verdictText, verdictCssClass;\n\n            cssClass = ui.getVerdictAndCssClass(options, score);\n            verdictText = score === 0 ? '' : cssClass[0];\n            cssClass = cssClass[1];\n            verdictCssClass = options.ui.useVerdictCssClass ? cssClass : -1;\n\n            if (options.ui.showProgressBar) {\n                if (score === undefined) {\n                    barPercentage = options.ui.progressBarEmptyPercentage;\n                } else {\n                    barPercentage = ui.percentage(options, score, options.ui.scores[4]);\n                }\n                ui.updateProgressBar(options, $el, cssClass, barPercentage);\n                if (options.ui.showVerdictsInsideProgressBar) {\n                    ui.updateVerdict(options, $el, verdictCssClass, verdictText);\n                }\n            }\n\n            if (options.ui.showStatus) {\n                ui.updateFieldStatus(options, $el, cssClass, score === undefined);\n            }\n\n            if (options.ui.showPopover) {\n                ui.updatePopover(options, $el, verdictText, score === undefined);\n            } else {\n                if (options.ui.showVerdicts && !options.ui.showVerdictsInsideProgressBar) {\n                    ui.updateVerdict(options, $el, verdictCssClass, verdictText);\n                }\n                if (options.ui.showErrors) {\n                    ui.updateErrors(options, $el, score === undefined);\n                }\n            }\n\n            if (options.ui.showScore) {\n                ui.updateScore(options, $el, score, score === undefined);\n            }\n        };\n    }(jQuery, ui));\n\n// Source: src/methods.js\n\n\n    var methods = {};\n\n    (function ($, methods) {\n        \"use strict\";\n        var onKeyUp, onPaste, applyToAll;\n\n        onKeyUp = function (event) {\n            var $el = $(event.target),\n                options = $el.data(\"pwstrength-bootstrap\"),\n                word = $el.val(),\n                userInputs,\n                verdictText,\n                verdictLevel,\n                score;\n\n            if (options === undefined) {\n                return;\n            }\n\n            options.instances.errors = [];\n            if (word.length === 0) {\n                score = undefined;\n            } else {\n                if (options.common.zxcvbn) {\n                    userInputs = [];\n                    $.each(options.common.userInputs.concat([options.common.usernameField]), function (idx, selector) {\n                        var value = $(selector).val();\n                        if (value) {\n                            userInputs.push(value);\n                        }\n                    });\n                    userInputs = userInputs.concat(options.common.zxcvbnTerms);\n                    score = Math.log2(zxcvbn(word, userInputs).guesses);\n                } else {\n                    score = rulesEngine.executeRules(options, word);\n                }\n            }\n            ui.updateUI(options, $el, score);\n            verdictText = ui.getVerdictAndCssClass(options, score);\n            verdictLevel = verdictText[1];\n            verdictText = verdictText[0];\n\n            if (options.common.debug) {\n                console.log(score + ' - ' + verdictText);\n            }\n\n            if ($.isFunction(options.common.onKeyUp)) {\n                options.common.onKeyUp(event, {\n                    score: score,\n                    verdictText: verdictText,\n                    verdictLevel: verdictLevel\n                });\n            }\n        };\n\n        onPaste = function (event) {\n            // This handler is necessary because the paste event fires before the\n            // content is actually in the input, so we cannot read its value right\n            // away. Therefore, the timeouts.\n            var $el = $(event.target),\n                word = $el.val(),\n                tries = 0,\n                callback;\n\n            callback = function () {\n                var newWord = $el.val();\n\n                if (newWord !== word) {\n                    onKeyUp(event);\n                } else if (tries < 3) {\n                    tries += 1;\n                    setTimeout(callback, 100);\n                }\n            };\n\n            setTimeout(callback, 100);\n        };\n\n        methods.init = function (settings) {\n            this.each(function (idx, el) {\n                // Make it deep extend (first param) so it extends also the\n                // rules and other inside objects\n                var clonedDefaults = $.extend(true, {}, defaultOptions),\n                    localOptions = $.extend(true, clonedDefaults, settings),\n                    $el = $(el);\n\n                localOptions.instances = {};\n                $el.data(\"pwstrength-bootstrap\", localOptions);\n\n                $.each(localOptions.common.events, function (idx, eventName) {\n                    var handler = eventName === \"paste\" ? onPaste : onKeyUp;\n                    $el.on(eventName, handler);\n                });\n\n                ui.initUI(localOptions, $el);\n                $el.trigger(\"keyup\");\n\n                if ($.isFunction(localOptions.common.onLoad)) {\n                    localOptions.common.onLoad();\n                }\n            });\n\n            return this;\n        };\n\n        methods.destroy = function () {\n            this.each(function (idx, el) {\n                var $el = $(el),\n                    options = $el.data(\"pwstrength-bootstrap\"),\n                    elements = ui.getUIElements(options, $el);\n                elements.$progressbar.remove();\n                elements.$verdict.remove();\n                elements.$errors.remove();\n                $el.removeData(\"pwstrength-bootstrap\");\n            });\n        };\n\n        methods.forceUpdate = function () {\n            this.each(function (idx, el) {\n                var event = {target: el};\n                onKeyUp(event);\n            });\n        };\n\n        methods.addRule = function (name, method, score, active) {\n            this.each(function (idx, el) {\n                var options = $(el).data(\"pwstrength-bootstrap\");\n\n                options.rules.activated[name] = active;\n                options.rules.scores[name] = score;\n                options.rules.extra[name] = method;\n            });\n        };\n\n        applyToAll = function (rule, prop, value) {\n            this.each(function (idx, el) {\n                $(el).data(\"pwstrength-bootstrap\").rules[prop][rule] = value;\n            });\n        };\n\n        methods.changeScore = function (rule, score) {\n            applyToAll.call(this, rule, \"scores\", score);\n        };\n\n        methods.ruleActive = function (rule, active) {\n            applyToAll.call(this, rule, \"activated\", active);\n        };\n\n        $.fn.pwstrength = function (method) {\n            var result;\n\n            if (methods[method]) {\n                result = methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n            } else if (typeof method === \"object\" || !method) {\n                result = methods.init.apply(this, arguments);\n            } else {\n                $.error(\"Method \" + method + \" does not exist on jQuery.pwstrength-bootstrap\");\n            }\n\n            return result;\n        };\n    }(jQuery, methods));\n}(jQuery));\n","+(function($, w, b) {\n    $(document).ready(function() { //on document ready...\n        'use strict';\n\n        /*\n         * Password strength bar\n         */\n        var options = {};\n        options.common = {\n            minChar: 6,\n            usernameField: \"#name\"\n        };\n        options.ui = {\n            showVerdicts: false,\n            container: '#pwd-strength-bar',\n            viewports: {\n                progress: \"#pwd-strength-viewport-progress\"\n            }\n        };\n        var $passwordInput = $('input#password-register');\n        if ($passwordInput.length)\n            $passwordInput.pwstrength(options);\n\n        /*\n         * Infinite scrolling\n         */\n        $('.scroll').jscroll({\n            autoTriggerUntil: 4,\n            nextSelector: 'a.next:last',\n            contentSelector: 'div.scroll',\n            loadingHtml: '<small>Loading...</small>'\n        });\n\n        /*\n         * Upload images, dropzone configuration\n         */\n        w.Dropzone.options.imageDropzone = {\n            // autoProcessQueue: false,\n            paramName: \"file\",\n            maxFiles: 1,\n            maxFilesize: 2, //MB\n            parallelUploads: 1,\n            acceptedFiles: 'image/*',\n            uploadMultiple: false,\n            previewsContainer: '#dropzone-preview-container',\n            dictDefaultMessage: '<i class=\"fa fa-3x fa-cloud-upload\"></i><br>Select or drop image here',\n            dictInvalidFileType: 'Only images allowed',\n            dictFileTooBig: 'Image must not exceed {{maxFilesize}} MB',\n            dictResponseError: 'Could not upload your image, verify it is a valid image with <{{maxFilesize}} MB',\n            dictMaxFilesExceeded: 'Only one image allowed',\n            init: function() {\n                var that = this;\n\n                // Show image preview and title form after image has been selected for upload\n                this.on(\"sending\", function() {\n                    $('form#image-dropzone').addClass('hidden');\n                    $('div#new-post-form-container').removeClass('hidden');\n                });\n\n                // Reset dropzone and title form on modal close\n                $('#newPost').on('hidden.bs.modal', function () {\n                    that.removeAllFiles();\n                    $('textarea[id=title]').val('');\n                    $('form[id=new-post]').validator();\n                    $('form#image-dropzone').removeClass('hidden');\n                    $('div#new-post-form-container').addClass('hidden');\n                });\n            }\n        };\n\n        /*\n         * Up/down voting system\n         */\n        var $b = $(b);\n        $b.on('click', '#up-vote', function() {\n            $(this).addClass('disabled');\n            $('#down-vote').addClass('disabled');\n            $.post('/api/vote/up', {\n                '_token': $('input[name=\"_token\"]').val(),\n                'post-id': parseInt($('input[name=\"post-id\"]').val(), 10)\n            }, function(res) {\n                if (res['status'] === 'ok' && typeof(res['up-votes']) != \"undefined\")\n                    $('#up-votes').html(res['up-votes'] + ' downs');\n            });\n        });\n        $b.on('click', '#down-vote', function() {\n            $(this).addClass('disabled');\n            $('#up-vote').addClass('disabled');\n            $.post('/api/vote/down', {\n                '_token': $('input[name=\"_token\"]').val(),\n                'post-id': parseInt($('input[name=\"post-id\"]').val(), 10)\n            }, function(res) {\n                if (res['status'] === 'ok' && typeof(res['down-votes']) != \"undefined\")\n                    $('#down-votes').html(res['down-votes'] + ' downs');\n            });\n        });\n\n        /*\n         * Post new comment\n         */\n        $b.on('click', '')\n    });\n})(jQuery, window, window.document.body);\n"],"sourceRoot":"/source/"}